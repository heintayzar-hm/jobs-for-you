#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)


def log(message, color: :yellow)
  color_code = if color == :yellow
                 "33"
               elsif color == :red
                 "31"
               else
                 "37"
               end

  printf "\033[1;#{color_code}m";

  puts "\n[ bin/setup ] #{message}"

  printf "\033[0m"
end

def system!(*args)
  system(*args) || (log "\n== Command #{args} failed ==", color: :red)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  log "== Installing dependencies ==", color: :green
  system! "gem install foreman"
  system! "gem install bundler --conservative"
  system!("bundle update --bundler --verbose")
  system!("bundle check") || system!("bundle install")

  unless File.exist?('.env')
    log "== Setup .env file from .env.example ==", color: :green
    system!('cp .env.example .env')
  end
  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  log "\n== Preparing database ==", color: :green
  system! "bin/rails db:prepare"

  log "\n== Removing old logs and tempfiles ==", color: :green
  system! "bin/rails log:clear tmp:clear"

  log "\n== Restarting application server ==", color: :green
  system! "bin/rails restart"

  log "== Creating babel.config.js file ==", color: :green

  log "== Adding Linters per microverse == ", color: :green

  linter = File.join(APP_ROOT, '.github/workflows/linters.yml')
  FileUtils.mkdir_p(File.dirname(linter))
  unless File.exist?(linter)
    # Create linters.yml
    FileUtils.touch(linter)

    log "== Adding linters.yml ==", color: :green
    # Add linters.yml
    File.open(linter, 'w') do |file|
      file.write <<~YML
      name: Linters

      on: pull_request

      env:
        FORCE_COLOR: 1

      jobs:
        rubocop:
          name: Rubocop
          runs-on: ubuntu-22.04
          steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-ruby@v1
              with:
                ruby-version: 3.1.x
            - name: Setup Rubocop
              run: |
                gem install --no-document rubocop -v '>= 1.0, < 2.0' # https://docs.rubocop.org/en/stable/installation/
                [ -f .rubocop.yml ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/ror/.rubocop.yml
            - name: Rubocop Report
              run: rubocop --color
        stylelint:
          name: Stylelint
          runs-on: ubuntu-22.04
          steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                node-version: "18.x"
            - name: Setup Stylelint
              run: |
                npm install --save-dev stylelint@13.x stylelint-scss@3.x stylelint-config-standard@21.x stylelint-csstree-validator@1.x
                [ -f .stylelintrc.json ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/ror/.stylelintrc.json
            - name: Stylelint Report
              run: npx stylelint "**/*.{css,scss}"
        nodechecker:
          name: node_modules checker
          runs-on: ubuntu-22.04
          steps:
            - uses: actions/checkout@v2
            - name: Check node_modules existence
              run: |
                if [ -d "node_modules/" ]; then echo -e "\\e[1;31mThe node_modules/ folder was pushed to the repo. Please remove it from the GitHub repository and try again."; echo -e "\e[1;32mYou can set up a .gitignore file with this folder included on it to prevent this from happening in the future." && exit 1; fi
      YML

    end
  end

  log "== Installing Linters ==", color: :green

  log "Installing Rubocop...", color: :green
  system "gem install --no-document rubocop -v '>= 1.0, < 2.0'"
  log "Rubocop installed!", color: :green

  log "Downloading .rubocop.yml...", color: :green
  system "[ -f .rubocop.yml ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/ror/.rubocop.yml"
  log ".rubocop.yml downloaded!", color: :green

  log "Installing Stylelint...", color: :green
  system('npm install --save-dev stylelint@13.x stylelint-scss@3.x stylelint-config-standard@21.x stylelint-csstree-validator@1.x')

  log "Stylelint downloaded!", color: :green
  system('[ -f .stylelintrc.json ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/ror/.stylelintrc.json')

  log "Finished installing Linters!", color: :green


  log "You can now run rails s", color: :green
end
